name: Release

on:
  push:
    branches:
      - main
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest # Build on Windows to ensure .NET Framework targets
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from csproj
        id: extract_version
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION=$(grep '<VersionPrefix>' src/Serilog.Sinks.MSSqlServer/Serilog.Sinks.MSSqlServer.csproj | sed 's/.*<VersionPrefix>\(.*\)<\/VersionPrefix>.*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "Tag v$VERSION already exists"
            exit 1
          fi

      - name: Run build
        run: ./Build.ps1 -SkipTests
        shell: pwsh

      - name: Get last commit message
        id: last_commit
        if: success() && github.ref == 'refs/heads/main'
        run: |
          git log -1 --pretty=%B > last_commit_message.txt

      # Create GitHub release only on main branch (latest release)
      - name: Create Release
        if: github.ref == 'refs/heads/main' && success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ env.VERSION }} \
            --title "v${{ env.VERSION }}" \
            --notes "$(cat last_commit_message.txt)" \
            artifacts/*.nupkg artifacts/*.snupkg

      - name: Publish to nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          nuget push artifacts\*.nupkg -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGET_API_KEY }}
